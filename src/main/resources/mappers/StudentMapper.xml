<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gradle_mybatis_spring_study.mapper.StudentMapper">
<sql id="selectSQL">
	SELECT STUD_ID, NAME, EMAIL, PHONE, DOB , GENDER FROM STUDENTS
</sql>

<sql id="whereSQL">
	<where>
		<if test="studId != null">
			STUD_ID = #{studId}
		</if>
	</where>
</sql>

<sql id="where_name_email">
	<where>
		<if test="name != null">
			name = #{name}
		</if>
		<if test="email != null">
			AND email = #{email}
		</if>
	</where>
</sql>

	<!-- ResultMap 이용 -->
	<resultMap type="Student" id="stdResult">
		<id column="STUD_ID" property="studId"/>
		<result column="F" property="phone.countryCode"/>
		<result column="M" property="phone.stateCode"/>
		<result column="L" property="phone.number"/>
	</resultMap>
	
	<!-- 결과매핑 -->
	<resultMap type="Student" id="StudentResult">
		<id column="stud_id" property="studId"/>
		<result column="name" property="name"/>
		<result column="email" property="email"/>
		<result column="phone" property="phone"/>
		<result column="dob" property="dob"/>
	</resultMap>
	
	<!-- 내포된 결과매핑(ResultMap)을 사용한 일대일 매핑 -->
	<resultMap type="Student" id="StudentAssociation" extends="StudentResult">
		<association property="address" resultMap="gradle_mybatis_spring_study.mapper.AddressMapper.AddressResult" />
	</resultMap>
	
	<resultMap type="Student" id="StudentGenderResult" extends="StudentResult">
		<result column="gender" property="gender"/>
	</resultMap>
	
	<!-- TypeHandler 이용 -->
	<select id="selectStudentByNo" parameterType="Student" resultType="Student">
		<include refid="selectSQL" />
		<include refid="whereSQL" />
	</select>
	
	<select id="selectStudentByNoWithResultMap" parameterType="Student" resultMap="stdResult">
		SELECT STUD_ID, NAME, EMAIL, DOB, SUBSTR(PHONE, 1, 3) AS F, SUBSTR(PHONE, 5, 3) AS M, SUBSTR(PHONE, 9, 4) AS L FROM STUDENTS WHERE STUD_ID = #{studId}
	</select>
	
	<select id="selectStudentByAll" resultType="Student">
		<include refid="selectSQL"></include>
	</select>
	
	<select id="selectStudentByAllForResultMap" resultMap="StudentResult">
		<include refid="selectSQL" />
	</select>
	
	<select id="selectStudentByAllForHashMap" resultType="map">
		<include refid="selectSQL" />
	</select>
	
	<select id="selectStudentByNoAssociation" parameterType="Student" resultMap="StudentAssociation">
		SELECT STUD_ID, NAME, EMAIL, PHONE, DOB, A.ADDR_ID, STREET, CITY, STATE, ZIP, COUNTRY
 		  FROM STUDENTS S JOIN ADDRESSES A ON S.ADDR_ID=A.ADDR_ID
 		 WHERE STUD_ID = #{studId}
	</select>
	
	<select id="selectStudentByMap" parameterType="map" resultMap="StudentGenderResult">
		<include refid="selectSQL" />
		<include refid="where_name_email" />
	</select>
	
	<select id="selectAllStudentByMap" parameterType="map" resultMap="StudentGenderResult">
		<include refid="selectSQL" />
		<include refid="where_name_email" />
	</select>
	
	<select id="selectStudentForMap" parameterType="int" resultMap="StudentGenderResult">
		<include refid="selectSQL" />
		<include refid="whereSQL" />
	</select>
	
	<insert id="insertStudent" parameterType="Student">
		INSERT INTO STUDENTS(STUD_ID, NAME, EMAIL, PHONE, DOB) VALUES(#{studId}, #{name}, #{email}, #{phone}, #{dob})
	</insert>
	
	<!-- enum 타입 다루기 -->
	<insert id="insertEnumStudent" parameterType="Student">
		INSERT INTO STUDENTS(STUD_ID, NAME, EMAIL,PHONE, DOB, GENDER) VALUES(#{studId}, #{name}, #{email}, #{phone}, #{dob}, #{gender})
	</insert>
	
	<update id="updateStudent" parameterType="Student">
		UPDATE STUDENTS SET NAME = #{name}, EMAIL = #{email}, PHONE = #{phone} WHERE STUD_ID = #{studId}
	</update>
	
	<delete id="deleteStudent" parameterType="Student">
		DELETE FROM STUDENTS WHERE STUD_ID = #{studId}
	</delete>
</mapper>